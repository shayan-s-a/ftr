<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>Assign_Previous_Owner</name>
        <label>Assign Previous Owner</label>
        <locationX>490</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>CaseOwner</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case_Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_New_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Unassigned_User_as_Owner</name>
        <label>Assign Unassigned User as Owner</label>
        <locationX>754</locationX>
        <locationY>1187</locationY>
        <assignmentItems>
            <assignToReference>CaseOwner</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Unassigned_User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_New_Case</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Does_Record_Type_Match</name>
        <label>Does Record Type Match?</label>
        <locationX>891</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Is_Case_MDU_Lead</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Record_Type_Matches</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Billing Issue</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order Creation</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Repair</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Account Activity</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Circuit</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Disconnect</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>First Bill Review</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Risk</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>UC Network COE-CPE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Previous_Email</targetReference>
            </connector>
            <label>Record Type Matches</label>
        </rules>
    </decisions>
    <decisions>
        <description>V6 - If the Email To Case Account is FederalRequests@ftr.com then set the case owner as Federal POD queue</description>
        <name>Email_To_Case_Account</name>
        <label>Email To Case Account</label>
        <locationX>182</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>Is_Case_MDU_Lead</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Federal_Requests</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ToAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>federalrequests@ftr.com</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Federal_POD</targetReference>
            </connector>
            <label>Federal Requests</label>
        </rules>
    </decisions>
    <decisions>
        <name>Incoming</name>
        <label>Incoming?</label>
        <locationX>976</locationX>
        <locationY>1931</locationY>
        <defaultConnector>
            <targetReference>Copy_1_of_UpdateLead</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Incoming_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateLead</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Case_MDU_Lead</name>
        <label>Is Case MDU Lead?</label>
        <locationX>1174</locationX>
        <locationY>1823</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Case MDU Lead</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Incoming</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Closed_Case</name>
        <label>Is Closed Case</label>
        <locationX>820</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>Set_Case_Status_to_Pending_Response</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Parent.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case_Record</targetReference>
            </connector>
            <label>Closed Case</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_First_Email</name>
        <label>Is First Email?</label>
        <locationX>501</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>Is_Closed_Case</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>First_Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Previous_Email.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_To_Case_Account</targetReference>
            </connector>
            <label>First Email</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Incoming</name>
        <label>Is Incoming</label>
        <locationX>1174</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Is_Case_MDU_Lead</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Incoming_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Does_Record_Type_Match</targetReference>
            </connector>
            <label>Incoming Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Owner_Active</name>
        <label>Is Owner Active?</label>
        <locationX>622</locationX>
        <locationY>971</locationY>
        <defaultConnector>
            <targetReference>Unassigned_User</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Owner_Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case_Record.Owner:User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case_Record.Owner:User.PTO_Start_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case_Record.Owner:User.PTO_Start_Date__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>$Flow.CurrentDateTime</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case_Record.Owner:User.PTO_End_Date__c</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>$Flow.CurrentDateTime</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Previous_Owner</targetReference>
            </connector>
            <label>Owner Active</label>
        </rules>
    </decisions>
    <description>V2 - Setting case status to 20-Pending Response to Customer for any incoming email if the case&apos;s origin is Email To Case.
        If the case is already closed then create a new case. - By Omar
V3 - Any new incoming email will change the status to 20-Pending Response To Customer and start the new milestone or create a new case if the case is already closed.
        Removed the checking for the origin as Email To Case.
        Added checking for record types: Billing Issue, Order Creation, Repair and Account Activity. - By Omar
V4 - Adding for Circuit, Disconnect, First Bill Review, Risk and UC Network COE-CPE Entitlement. - By Omar
V5 - Fixing for Record Type for the new case. - By Omar
V6 - If the Email To Case Account is FederalRequests@ftr.com then set the case owner as Federal POD queue. - By Omar (Case# 01195214)</description>
    <environments>Default</environments>
    <interviewLabel>EmailMessage_Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>EmailMessage_Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_New_Case</name>
        <label>Create New Case</label>
        <locationX>622</locationX>
        <locationY>1379</locationY>
        <connector>
            <targetReference>Is_Case_MDU_Lead</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>Get_Case_Record.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>Get_Case_Record.ContactId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Customer_Requester_Email__c</field>
            <value>
                <elementReference>$Record.FromAddress</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Customer_Requester_Name__c</field>
            <value>
                <elementReference>$Record.FromName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>Get_Case_Record.Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Opportunity__c</field>
            <value>
                <elementReference>Get_Case_Record.Opportunity__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Orderz__c</field>
            <value>
                <elementReference>Get_Case_Record.Orderz__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Origin</field>
            <value>
                <elementReference>Get_Case_Record.Origin</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>CaseOwner</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <elementReference>Get_Case_Record.Priority</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Case_Record.RecordTypeId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Related_To2__c</field>
            <value>
                <elementReference>Get_Case_Record.Related_To2__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>Get_Case_Record.Subject</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SuppliedCompany</field>
            <value>
                <elementReference>Get_Case_Record.SuppliedCompany</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SuppliedEmail</field>
            <value>
                <elementReference>Get_Case_Record.SuppliedEmail</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SuppliedName</field>
            <value>
                <elementReference>Get_Case_Record.SuppliedName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SuppliedPhone</field>
            <value>
                <elementReference>Get_Case_Record.SuppliedPhone</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <elementReference>Get_Case_Record.Type</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Case_Record</name>
        <label>Get Case Record</label>
        <locationX>622</locationX>
        <locationY>863</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Owner_Active</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Previous_Email</name>
        <label>Get Previous Email</label>
        <locationX>501</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_First_Email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>MessageDate</field>
            <operator>LessThan</operator>
            <value>
                <elementReference>$Record.MessageDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailMessage</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Federal_POD</name>
        <label>Get Queue - Federal POD</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Owner_Federal_POD</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Federal_POD</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Unassigned_User</name>
        <label>Unassigned User</label>
        <locationX>754</locationX>
        <locationY>1079</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Unassigned_User_as_Owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Unassigned User</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Copy_1_of_UpdateLead</name>
        <label>UpdateLead</label>
        <locationX>1108</locationX>
        <locationY>2039</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Parent.Lead__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AwatingReplyLead__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Contacted</stringValue>
            </value>
        </inputAssignments>
        <object>Lead</object>
    </recordUpdates>
    <recordUpdates>
        <name>Set_Case_Status_to_Pending_Response</name>
        <label>Set Case Status to Pending Response</label>
        <locationX>1018</locationX>
        <locationY>863</locationY>
        <connector>
            <targetReference>Is_Case_MDU_Lead</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>20-Pending Response to Customer</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Owner_Federal_POD</name>
        <label>Update Case Owner - Federal POD</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>Is_Case_MDU_Lead</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ParentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>Get_Queue_Federal_POD.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>UpdateLead</name>
        <label>UpdateLead</label>
        <locationX>844</locationX>
        <locationY>2039</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Parent.Lead__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>AwatingReplyLead__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </inputAssignments>
        <object>Lead</object>
    </recordUpdates>
    <start>
        <locationX>1048</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Is_Incoming</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>CaseOwner</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
