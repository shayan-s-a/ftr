global class FTRWSDPIAddressValResultMock implements WebServiceMock {
   
    global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
               
               ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_element respElement = new ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_element();
                ftr_Sharedtype.ResponseHeader header = new ftr_Sharedtype.ResponseHeader();
                header.operationStatus = 'TRUE';
                ftr_Resourcemanagement.msg_RetrieveCustomerFacilitiesResponse facResp = new ftr_Resourcemanagement.msg_RetrieveCustomerFacilitiesResponse();
                ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_CustomerFacilities[] custFec = new ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_CustomerFacilities[]{};
                ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_CustomerFacilities customerFacility = new ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_CustomerFacilities();
               	ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_Location location = new ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_Location();
                customerFacility.location = location;
               ftr_Sharedtype.Address address = new ftr_Sharedtype.Address();
               location.address = address;
               	address.secondaryDesignator = '423';
               address.secondaryNumber = '7387';
               address.streetNumber = '423784';
               address.preDirectional = 'd';
               address.streetName = 'dasj';
               address.streetSuffix = 'dasj';
               address.cityName = 'djasjd';
               
                address.stateAbbreviation = 'tx';
                    address.zipCode = '75013';
               
               ftr_Sharedtype.GlobalPosition globalPos = new ftr_Sharedtype.GlobalPosition();
                   location.globalPosition = globalPos;
                    
                    globalPos.latitude = '+834938948';
                    globalPos.longitude = '-482789723897';

                    ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_ServiceAddress serviceAddress = new ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_ServiceAddress();
                        location.serviceAddress = serviceAddress;
                    ftr_Sharedtype.ServiceAddressMasterId serviceMasterId = new ftr_Sharedtype.ServiceAddressMasterId();
                        serviceAddress.serviceAddressMasterId = serviceMasterId;
                    serviceMasterId.controlNumber = 1234;

                    ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_Connection connection = new ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_Connection();
                        customerFacility.connection = connection;
                    
                      connection.centralOfficeCommonLanguageLocationIdentifier = 'dajdahjh';    
                    

               
               //customerFacility.
                    facResp.header = header;
                facResp.customerFacilities = custFec;
               custFec.add(customerFacility);
                respElement.RetrieveCustomerFacilitiesOutput = facResp;
                response.put('response_x', respElement);
 
        // Create response element from the autogenerated class.
        // Populate response element.
        // Add response element to the response parameter, as follows:
        //response.put('response_x', responseElement); 
   }
    
}

/*
wirecenter = customerFacility.wireCenter;
                    ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_Location location = customerFacility.location;
                    
                    ftr_Sharedtype.Address address = location.address;
                    ftr_Sharedtype.GlobalPosition globalPos = location.globalPosition;
                    
                    latitude = globalPos.latitude;
                    longitude = globalPos.longitude;
                    
                     secDesignator = address.secondaryDesignator;
                     secNumber = address.secondaryNumber;

                    addressLine = ''+address.streetNumber;
                    
                    if(address.preDirectional != null) {
                    	addressLine = addressLine + ' ' + address.preDirectional;    
                    }
                    
                    addressLine = addressLine + ' ' + address.streetName;
                    if(address.streetSuffix != null) {
                    	addressLine = addressLine + ' ' + address.streetSuffix;    
                    }
                    
                    if(secDesignator != null && secNumber != null) {
                        unit = secNumber + ' ' + secDesignator;
                    }
                    city = address.cityName;
                    state = address.stateAbbreviation;
                    zipCode = address.zipCode;

                    ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_ServiceAddress serviceAddress = location.serviceAddress;
                    ftr_Sharedtype.ServiceAddressMasterId serviceMasterId = serviceAddress.serviceAddressMasterId;
                    svcControlNo = '' + serviceMasterId.controlNumber;

                    ftr_Resourcemanagement.RetrieveCustomerFacilitiesResponse_Connection connection = customerFacility.connection;
                    if(connection != null) {
                      clliCode = connection.centralOfficeCommonLanguageLocationIdentifier;    
                    }


*/